"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/navbar";
import { useEffect } from "react";
import { User, useUserStore } from "@/store/user.store";
import { todoActions, userActions } from "@/actions";
import { io } from "socket.io-client";

const token =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MGNlYmRmMzAyY2UyYzkyZjgzNjcyYiIsInJvbGUiOiJVU0VSIiwic2Vzc2lvbklkIjoiNmM3NmM4ZTEtNGU5Zi00ZTcwLTgxNjQtNDUyYzZkMGYyYTg2IiwiaWF0IjoxNzEyODI5MzA5LCJleHAiOjE3MTI4MzY1MDl9.RdKXzw9HVhJZU0CRNhy9484P5xJVnU6HkRiQMvCgnNI";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// socket connection

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  useEffect(() => {
    const socket = io("http://localhost:8888", {
      reconnection: true,
      transports: ["websocket"],
      query: { token }, // used for auth
    });

    socket.on("connect", () => {
      console.log("Connected to server");
    });

    socket.on("message", (message) => {
      console.log(message);
    });

    socket.on("disconnect", () => {
      console.log("Disconnected from server");
    });

    return () => {
      socket.disconnect();
    };
  }, []);
  // const socket = io(BASE_URL, {
  //   reconnect: true,
  //   transports: ["websocket"],
  //   query: { token: getToken() }, // used for auth
  // });

  // const socket = io(process.env.NEXT_PUBLIC_BASE_URL || "", {
  //   transports: ["websocket"],
  //   upgrade: false,
  //   query: {
  //     token: localStorage.getItem("token"),
  //   },
  // });

  // const { setUser } = useUserStore();
  // useEffect(() => {
  //   const id = localStorage.getItem("id");
  //   (async () => {
  //     const userData = await userActions.FetchUser();

  //     const users = userData.data.filter((item: any) => item._id === id);
  //     console.log(users[0], "----");

  //     const mappedData: User = {
  //       id: users[0]._id,
  //       username: users[0].username,
  //       email: users[0].email,
  //       isAuthenticated: true,
  //       created_at: users[0].createdAt,
  //       updated_at: users[0].updatedAt,
  //     };

  //     setUser(mappedData);
  //   })();
  // }, []);
  return (
    <html lang="en">
      <body className={inter.className}>
        <div className="max-w-3xl mx-auto p-4">
          {/* <Navbar /> */}
          <div className="mt-8">{children}</div>
        </div>
      </body>
    </html>
  );
}
